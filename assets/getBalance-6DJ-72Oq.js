import{w as n,t as s}from"./index-DdggzL-P.js";import{readContract as t}from"./read-contract-cuBghJfu.js";const o="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee";function m(e){return e.toLowerCase()===o}const d="0x70a08231",i=[{type:"address",name:"_address"}],u=[{type:"uint256"}];async function T(e){return t({contract:e.contract,method:[d,i,u],params:[e.address]})}const y="0x06fdde03",N=[],l=[{type:"string"}];async function _(e){return t({contract:e.contract,method:[y,N,l],params:[]})}async function S(e){return n(()=>_(e),{cacheKey:`${e.contract.chain.id}:${e.contract.address}:name`,cacheTime:Number.POSITIVE_INFINITY})}const E="0x95d89b41",I=[],$=[{type:"string"}];async function f(e){return t({contract:e.contract,method:[E,I,$],params:[]})}async function h(e){return n(()=>f(e),{cacheKey:`${e.contract.chain.id}:${e.contract.address}:symbol`,cacheTime:Number.POSITIVE_INFINITY})}const F="0x313ce567",O=[],P=[{type:"uint8"}];async function U(e){return t({contract:e.contract,method:[F,O,P],params:[]})}async function b(e){if(m(e.contract.address))return{name:"Ether",symbol:"ETH",decimals:18,...e.contract.chain.nativeCurrency};const[c,a,r]=await Promise.all([S(e),h(e),U(e)]);return{name:c,symbol:a,decimals:r}}async function w(e){const[c,a]=await Promise.all([T(e),b(e)]);return{...a,value:c,displayValue:s(c,a.decimals)}}export{w as getBalance};
