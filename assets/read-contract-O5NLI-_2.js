import{n as u,aT as y,$ as w,ae as A,H as g,aU as x,aV as d,L as P}from"./index-CN9VlXtR.js";function k(a){return Object.fromEntries(Object.entries(a).map(([t,e])=>[t,{balance:e.balance?u(e.balance):void 0,nonce:e.nonce?u(e.nonce):void 0,code:e.code,state:e.state,stateDiff:e.stateDiff}]))}async function H(a,t){const{blockNumber:e,blockTag:r,...c}=t,s=(e?u(e):void 0)||r||"latest";return await a({method:"eth_call",params:t.stateOverrides?[c,s,k(t.stateOverrides)]:[c,s]})}async function C(a){const{contract:t,method:e,params:r}=a,c=async()=>{var l,b;if(Array.isArray(e))return e;if(x(e))return d(e);if(typeof e=="function")return d(await e(t));if(typeof e=="string"&&e.startsWith("function ")){const o=P(e);if(o.type==="function")return d(o);throw new Error('"method" passed is not of type "function"')}if(t.abi&&((l=t.abi)==null?void 0:l.length)>0){const o=(b=t.abi)==null?void 0:b.find(m=>m.type==="function"&&m.name===e);if(o)return d(o)}throw new Error(`Could not resolve method "${e}".`)},[n,s]=await Promise.all([c(),typeof r=="function"?r():r]);let f;n[1].length===0?f=n[0]:f=y([n[0],w(n[1],s??[])]);const h=A({chain:t.chain,client:t.client}),p=await H(h,{data:f,to:t.address}),i=g(n[2],p);return Array.isArray(i)&&i.length===1?i[0]:i}export{C as readContract};
