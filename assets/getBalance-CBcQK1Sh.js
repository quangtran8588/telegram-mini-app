import{a9 as n,aa as s,ab as m}from"./index-D4cLBfaq.js";import{readContract as e}from"./read-contract-Bqrf5NxF.js";import{d}from"./decimals-jdWFUsrK.js";const o="0x70a08231",i=[{type:"address",name:"_address"}],u=[{type:"uint256"}];async function y(a){return e({contract:a.contract,method:[o,i,u],params:[a.address]})}const l="0x06fdde03",T=[],N=[{type:"string"}];async function _(a){return e({contract:a.contract,method:[l,T,N],params:[]})}async function f(a){return n(()=>_(a),{cacheKey:`${a.contract.chain.id}:${a.contract.address}:name`,cacheTime:Number.POSITIVE_INFINITY})}const h="0x95d89b41",I=[],b=[{type:"string"}];async function $(a){return e({contract:a.contract,method:[h,I,b],params:[]})}async function F(a){return n(()=>$(a),{cacheKey:`${a.contract.chain.id}:${a.contract.address}:symbol`,cacheTime:Number.POSITIVE_INFINITY})}async function S(a){if(s(a.contract.address))return{name:"Ether",symbol:"ETH",decimals:18,...a.contract.chain.nativeCurrency};const[c,t,r]=await Promise.all([f(a),F(a),d(a)]);return{name:c,symbol:t,decimals:r}}async function U(a){const[c,t]=await Promise.all([y(a),S(a)]);return{...t,value:c,displayValue:m(c,t.decimals)}}export{U as getBalance};
